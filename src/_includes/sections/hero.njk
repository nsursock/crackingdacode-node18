<section class=" max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 bg-white dark:bg-gray-900 dark:text-gray-200 ">
  <div class=" relative bg-white overflow-hidden lg:flex lg:items-center lg:h-screen dark:bg-gray-900 dark:text-gray-200 ">
    <div class="max-w-7xl lg:w-1/2 dark:bg-gray-900 dark:text-gray-200">
      <div class=" relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32 dark:bg-gray-900
          dark:text-gray-200 ">
        <div>
          <div class=" relative pt-6 px-4 sm:px-6 lg:px-8 dark:bg-gray-900 dark:text-gray-200 "></div>
        </div>
        <main class=" mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28 ">
          <div class="sm:text-center lg:text-left">
            <h1 class=" text-4xl tracking-tight font-extrabold text-gray-900 lg:text-left sm:text-5xl md:text-6xl ">
              <span class="block inline dark:bg-gray-900 dark:text-white">
                I am a highly detail-oriented web developer 
              </span>
              <span class="block text-indigo-600 inline">available for hire today.</span>
            </h1>
            <p class=" mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0
                dark:bg-gray-900 dark:text-gray-400 ">
              Are you weary of speculating about the profitability of your ideas? Let me transform them into reality with the website I will construct for you. In the event of dissatisfaction, my services are rendered at no cost!
            </p>
            <!-- here to make the critical task work -->
            <div class="w-2/3 mt-2 hidden">
              <label
                for="dummy"
                class=" block text-sm font-medium text-gray-700 flex justify-between ">
                Dummy
                <span class="text-gray-500">Optional</span>
              </label>
              <input
                type="text"
                name="dummy"
                id="dummy"
                class=" mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md "/>
            </div>
            <!-- here to make the critical task work -->
            <div class="mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start">
              <div class="rounded-md shadow">
                <a
                  href="#contact"
                  class=" w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md
                    text-white dark:bg-indigo-400 dark:text-black dark:hover:bg-indigo-300 bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10 ">
                  Contact Me
                </a>
              </div>
              <div class="mt-3 sm:mt-0 sm:ml-3">
                <a
                  href="#features"
                  class=" w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md
                    text-indigo-700 bg-indigo-100 hover:bg-indigo-200 dark:bg-indigo-900 dark:text-indigo-300 dark:hover:bg-indigo-800 md:py-4 md:text-lg md:px-10 ">
                  Learn more
                </a>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
    <div
      class="lg:w-1/2">
      <!-- <div class="lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2"> -->
      <svg
        class=" h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full fill-current text-indigo-600 "
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 512 512">
        <path
          d="M384 400.33l35.13-.33A29 29 0 00448 371.13V140.87A29 29 0 00419.13 112l-35.13.33M128 112l-36.8.33c-15.88 0-27.2
            13-27.2 28.87v230.27c0 15.87 11.32 28.86 27.2 28.86L128 400M384 192v128M320 160v192M256 176v160M192 160v192M128 192v128"
          fill="none"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="32"/>
      </svg>
    </div>
  </div>
</section>
<!-- <script> const dataHero = () => {
    return {
      // text: [],
      textArray: [
        'Detail-oriented web developer',
        'for hire today',
        `Tired of debating whether your ideas can make money?
        Bring them to life thanks to the website I will build for
        you. If you're not satisfied, I work for free!`,
      ],
      // typeSpeed: [150, 150, 75],

      // typeText(item, index) {
      //   let charIndex = 0
      //   return new Promise((resolve) => {
      //     var func = setInterval(() => {
      //       if (charIndex === item.length) {
      //         clearInterval(func)
      //         resolve('finished')
      //       }
      //       this.text[index] = item.substring(0, charIndex)
      //       charIndex++
      //     }, this.typeSpeed[index])
      //   })
      // },
      //
      // async init() {
      //   for (let index = 0; index < this.textArray.length; index++) {
      //     await this.typeText(this.textArray[index], index)
      //   }
      // },
    }
} </script> -->